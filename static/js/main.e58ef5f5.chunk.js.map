{"version":3,"sources":["components/weather-preview/WeatherPreview.module.scss","components/weather-info/WeatherInfo.module.scss","components/location-input/LocationInput.module.scss","assets/cloud1.svg","assets/cloud2.svg","assets/cloud3.svg","App.module.scss","components/weather-preview/Clouds.js","components/weather-preview/WeatherPreview.js","components/weather-info/WeatherInfo.js","components/location-input/LocationInput.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","wrapper","day","cloud1-1","cloudMove1","cloud2-1","cloud1-2","cloud2-2","cloud1-3","cloud2-3","cloud1-4","cloud2-4","cloud1-5","cloud2-5","cloud1-6","cloud2-6","cloud1-7","cloud2-7","cloud1-8","cloud2-8","cloud1-9","cloud2-9","cloud1-10","cloud2-10","rainSmall1","drop","snowing","rainBig1","rainMed1","rainSmall2","rainBig2","rainMed2","rainSmall3","rainBig3","rainMed3","rainSmall4","rainBig4","rainMed4","rainSmall5","rainBig5","rainMed5","rainSmall6","rainBig6","rainMed6","rainSmall7","rainBig7","rainMed7","rainSmall8","rainBig8","rainMed8","rainSmall9","rainBig9","rainMed9","rainSmall10","rainBig10","rainMed10","rainSmall11","rainBig11","rainMed11","rainSmall12","rainBig12","rainMed12","sun","rise","moon","crater1","crater2","crater3","crater4","crater5","crater6","crater7","crater8","crater9","hillBg1","hillBg2","hillFg1","hillFg2","hillFg3","temperature","weatherDetailsWrapper","location","weatherDetails","weatherDays","form","input","submit","__webpack_require__","p","root","Cloud1","react_default","a","createElement","src","cloud1","alt","Cloud2","cloud2","Fall","props","isSnowing","rainSmall","rainMed","rainBig","i","push","key","concat","className","styles","style","overflow","Hills","isDay","Sun","Moon","Clouds","clouds","cloudCount","WeatherPreview","join","isRaining","getDayName","dateStr","locale","arguments","length","undefined","Date","toLocaleDateString","weekday","WeatherInfo","forecast","time","current","weekForecast","datetime","max_temp","min_temp","temp","wind_cdir","Math","round","wind_spd","role","aria-label","rh","LocationInput","onSubmit","handleLocationChange","type","name","defaultValue","value","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_ref","asyncToGenerator","regenerator_default","mark","_callee","e","wrap","_context","prev","next","preventDefault","target","getCurrentWeather","stop","_x","apply","_ref2","_callee2","API","res","data","_context2","fetch","sent","json","pop","timezone","snow","getCurrentTime","setState","abrupt","_x2","timeZone","options","hour","hours","Intl","DateTimeFormat","format","minute","state","_this$state","React","Component","Boolean","window","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0EACAA,EAAAC,QAAA,CAAkBC,QAAA,gCAAAC,IAAA,4BAAAC,WAAA,iCAAAC,WAAA,mCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,WAAA,iCAAAC,YAAA,kCAAAC,YAAA,kCAAAC,WAAA,mCAAAC,KAAA,6BAAAC,QAAA,gCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,WAAA,mCAAAC,SAAA,iCAAAC,SAAA,iCAAAC,YAAA,oCAAAC,UAAA,kCAAAC,UAAA,kCAAAC,YAAA,oCAAAC,UAAA,kCAAAC,UAAA,kCAAAC,YAAA,oCAAAC,UAAA,kCAAAC,UAAA,kCAAAC,IAAA,4BAAAC,KAAA,6BAAAC,KAAA,6BAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,gCAAAC,QAAA,kDCAlB/E,EAAAC,QAAA,CAAkBC,QAAA,6BAAA8E,YAAA,iCAAAC,sBAAA,2CAAAC,SAAA,8BAAA/E,IAAA,yBAAAgF,eAAA,oCAAAC,YAAA,qDCAlBpF,EAAAC,QAAA,CAAkBoF,KAAA,4BAAAC,MAAA,6BAAAC,OAAA,qDCDlBvF,EAAAC,QAAiBuF,EAAAC,EAAuB,oDCAxCzF,EAAAC,QAAiBuF,EAAAC,EAAuB,oDCAxCzF,EAAAC,QAAiBuF,EAAAC,EAAuB,oDCCxCzF,EAAAC,QAAA,CAAkByF,KAAA,oQCIX,SAASC,IACd,OAAOC,EAAAC,EAAAC,cAAA,OAAKC,IAAKC,IAAQC,IAAI,UAGxB,SAASC,IACd,OAAON,EAAAC,EAAAC,cAAA,OAAKC,IAAKI,IAAQF,IAAI,8BCF/B,SAASG,EAAKC,GAOZ,IAPmB,IACXC,EAAcD,EAAdC,UAEJC,EAAY,GACZC,EAAU,GACVC,EAAU,GAELC,EAAI,EAAGA,EAAI,GAAIA,IACtBH,EAAUI,KACRf,EAAAC,EAAAC,cAAA,OAAKc,IAAG,YAAAC,OAAcH,GAAKI,UAAS,GAAAD,OAAKE,IAAM,YAAAF,OAAaH,QAE9DF,EAAQG,KACNf,EAAAC,EAAAC,cAAA,OAAKc,IAAG,UAAAC,OAAYH,GAAKI,UAAS,GAAAD,OAAKE,IAAM,UAAAF,OAAWH,QAE1DD,EAAQE,KACNf,EAAAC,EAAAC,cAAA,OAAKc,IAAG,UAAAC,OAAYH,GAAKI,UAAS,GAAAD,OAAKE,IAAM,UAAAF,OAAWH,QAI5D,OACEd,EAAAC,EAAAC,cAAA,OACEgB,UAAWR,EAAYS,IAAOpF,QAAU,KACxCqF,MAAO,CAAEC,SAAU,WAElBV,EACAC,EACAC,GAKP,SAASS,EAAMb,GACb,OACET,EAAAC,EAAAC,cAAA,OAAKgB,UAAWT,EAAMc,MAAQJ,IAAO5G,IAAM,MACzCyF,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOpC,UACvBiB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOnC,UACvBgB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOlC,UACvBe,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOjC,UACvBc,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOhC,WAK7B,SAASqC,IACP,OACExB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOhD,OAK7B,SAASsD,IACP,OACEzB,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO9C,MACrB2B,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO7C,UACvB0B,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO5C,UACvByB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO3C,UACvBwB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO1C,UACvBuB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOzC,UACvBsB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOxC,UACvBqB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOvC,UACvBoB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOtC,UACvBmB,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOrC,YAM/B,SAAS4C,EAAOjB,GAGd,IAFA,IAAIkB,EAAS,GAEJb,EAAI,EAAGA,GAAKL,EAAMmB,WAAYd,IACrCa,EAAOZ,KACLf,EAAAC,EAAAC,cAAA,OAAKc,IAAG,UAAAC,OAAYH,GAAKI,UAAS,GAAAD,OAAKE,IAAM,UAAAF,OAAWH,MACtDd,EAAAC,EAAAC,cAACH,EAAD,QAGJ4B,EAAOZ,KACLf,EAAAC,EAAAC,cAAA,OAAKc,IAAG,UAAAC,OAAYH,GAAKI,UAAS,GAAAD,OAAKE,IAAM,UAAAF,OAAWH,MACtDd,EAAAC,EAAAC,cAACI,EAAD,QAKN,OACEN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOQ,QAASA,IAKvB,SAASE,EAAepB,GAAO,IACpCmB,EAAiCnB,EAAjCmB,WAAYL,EAAqBd,EAArBc,MAAOb,EAAcD,EAAdC,UAC3B,OACEV,EAAAC,EAAAC,cAAA,OACEgB,UACEK,EAAQ,CAACJ,IAAO7G,QAAS6G,IAAO5G,KAAKuH,KAAK,KAAOX,IAAO7G,SAGzDiH,EAAQvB,EAAAC,EAAAC,cAACsB,EAAD,MAAUxB,EAAAC,EAAAC,cAACuB,EAAD,MAClBhB,EAAMsB,UAAY/B,EAAAC,EAAAC,cAACM,EAAD,CAAME,UAAWA,IAAgB,KACpDV,EAAAC,EAAAC,cAACoB,EAAD,CAAOC,MAAOA,IACbK,GAAc5B,EAAAC,EAAAC,cAACwB,EAAD,CAAQE,WAAYA,yBC1GzC,SAASI,EAAWC,GAA2B,IAAlBC,EAAkBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAT,QAEpC,OADW,IAAIG,KAAKL,GACRM,mBAAmBL,EAAQ,CAAEM,QAAS,SAGrC,SAASC,EAAYhC,GAMlC,IANyC,IACjCiC,EAAmBjC,EAAnBiC,SAAUC,EAASlC,EAATkC,KACZC,EAAUnC,EAAMiC,SAAS,GAC3BG,EAAe,GAGV/B,EAAI,EAAGA,GAFI,EAEcA,IAChC+B,EAAa9B,KACXf,EAAAC,EAAAC,cAAA,QAAMc,IAAG,mBAAAC,OAAqBH,IAC3BkB,EAAWU,EAAS5B,GAAGgC,UAD1B,KACuCJ,EAAS5B,GAAGiC,SADnD,SACgE,IAC7DL,EAAS,GAAGM,SAFf,OAE0B,MAK9B,OACEhD,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO7G,SACrB0F,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO/B,aAAcwD,EAAQK,KAA7C,QACAjD,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO5G,KACpBoI,EADH,KACWX,EAAWY,EAAQE,WAE9B9C,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO7B,UAAWmB,EAAMnB,UACxCU,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO9B,uBACrBW,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO5B,gBACrBS,EAAAC,EAAAC,cAAA,qBACS0C,EAAQM,UADjB,IAC6BC,KAAKC,MAAMR,EAAQS,UADhD,OAC+D,IAC7DrD,EAAAC,EAAAC,cAAA,QAAMoD,KAAK,MAAMC,aAAW,QAA5B,iBAIFvD,EAAAC,EAAAC,cAAA,yBACa0C,EAAQY,GADrB,IAC0B,IACxBxD,EAAAC,EAAAC,cAAA,QAAMoD,KAAK,MAAMC,aAAW,YAA5B,kBAKJvD,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAO3B,aAAcqD,yBC3C9B,SAASY,EAAchD,GACpC,OACET,EAAAC,EAAAC,cAAA,QAAMgB,UAAWC,IAAO1B,KAAMiE,SAAUjD,EAAMkD,sBAC5C3D,EAAAC,EAAAC,cAAA,yBAEEF,EAAAC,EAAAC,cAAA,SACEgB,UAAWC,IAAOzB,MAClBkE,KAAK,OACLC,KAAK,WACLC,aAAa,uBAGjB9D,EAAAC,EAAAC,cAAA,SAAOgB,UAAWC,IAAOxB,OAAQiE,KAAK,SAASG,MAAM,6BCgG5CC,cAzGb,SAAAA,EAAYvD,GAAO,IAAAwD,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM3D,KAaRkD,qBAdmB,eAAAa,EAAAN,OAAAO,EAAA,EAAAP,CAAAQ,EAAAzE,EAAA0E,KAcI,SAAAC,EAAMC,GAAN,IAAAvF,EAAA,OAAAoF,EAAAzE,EAAA6E,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OACrBJ,EAAEK,iBACI5F,EAAWuF,EAAEM,OAAO,GAAGpB,MAC7BE,EAAKmB,kBAAkB9F,GAHF,wBAAAyF,EAAAM,SAAAT,MAdJ,gBAAAU,GAAA,OAAAd,EAAAe,MAAAnB,KAAAjC,YAAA,GAAA8B,EAoBnBmB,kBApBmB,eAAAI,EAAAtB,OAAAO,EAAA,EAAAP,CAAAQ,EAAAzE,EAAA0E,KAoBC,SAAAc,EAAMnG,GAAN,IAAAoG,EAAAC,EAAAC,EAAA7D,EAAAR,EAAAK,EAAAlB,EAAAiC,EAAA,OAAA+B,EAAAzE,EAAA6E,KAAA,SAAAe,GAAA,cAAAA,EAAAb,KAAAa,EAAAZ,MAAA,aACN,mCACNS,EAFY,qDAAAzE,OAE+C3B,EAF/C,SAAA2B,OACN,oCADM4E,EAAAZ,KAAA,EAGAa,MAAMJ,GAHN,cAGZC,EAHYE,EAAAE,KAAAF,EAAAZ,KAAA,EAICU,EAAIK,OAJL,cAIZJ,EAJYC,EAAAE,KAKZhE,EAAY6D,EAAKA,KAAK,GAAGK,IAAM,GAC/B1E,EAAQ0C,EAAK1C,MAAMqE,EAAKM,UACxBtE,EAAagE,EAAKA,KAAK,GAAGjE,OAAS,GACnCjB,EAAYkF,EAAKA,KAAK,GAAGO,KAAO,KAAOpE,EACvCY,EAAOsB,EAAKmC,eAAeR,EAAKM,UACtCjC,EAAKoC,SAAS,CACZ/G,SAAUA,EACVoD,SAAUkD,EAAKA,KACf7D,UAAWA,EACXR,MAAOA,EACPK,WAAYA,EACZlB,UAAWA,EACXiC,KAAMA,IAjBUkD,EAAAS,OAAA,SAoBXV,GApBW,yBAAAC,EAAAR,SAAAI,MApBD,gBAAAc,GAAA,OAAAf,EAAAD,MAAAnB,KAAAjC,YAAA,GAAA8B,EAmDnB1C,MAAQ,SAAAiF,GACN,IAAIC,EAAU,CACVD,SAAUA,EACVE,KAAM,WAIJC,EAFQ,IAAIC,KAAKC,eAAe,GAAIJ,GAElBK,OAAO,IAAIxE,MACnC,OAAOqE,EAAQ,GAAKA,EAAQ,IA3DX1C,EA+DnBmC,eAAiB,SAAAF,GACf,IAAIO,EAAU,CACVD,SAAUN,EACVQ,KAAM,UACNK,OAAQ,WAKZ,OAHc,IAAIH,KAAKC,eAAe,GAAIJ,GAEnBK,OAAO,IAAIxE,OApElC2B,EAAK+C,MAAQ,CACX1H,SAAU,gBACVoD,SAAU,KACVX,WAAW,EACXR,OAAO,EACPb,WAAW,EACXkB,WAAY,EACZe,UAAMN,GAVS4B,2LA4CjBG,KAAKgB,kBAAkBhB,KAAK4C,MAAM1H,6IA+B3B,IAAA2H,EASH7C,KAAK4C,MAPPtE,EAFKuE,EAELvE,SACAX,EAHKkF,EAGLlF,UACAR,EAJK0F,EAIL1F,MACAK,EALKqF,EAKLrF,WACAtC,EANK2H,EAML3H,SACAoB,EAPKuG,EAOLvG,UACAiC,EARKsE,EAQLtE,KAGF,OACED,GACE1C,EAAAC,EAAAC,cAAA,OAAKgB,UAAWC,IAAOrB,MACrBE,EAAAC,EAAAC,cAACuD,EAAD,CAAeE,qBAAsBS,KAAKT,uBAC1C3D,EAAAC,EAAAC,cAAC2B,EAAD,CACEE,UAAWA,EACXR,MAAOA,EACPK,WAAYA,EACZlB,UAAWA,IAEZgC,GACC1C,EAAAC,EAAAC,cAACuC,EAAD,CAAaC,SAAUA,EAAUpD,SAAUA,EAAUqD,KAAMA,YAlGrDuE,IAAMC,WCMJC,QACW,cAA7BC,OAAO/H,SAASgI,UAEe,UAA7BD,OAAO/H,SAASgI,UAEhBD,OAAO/H,SAASgI,SAASC,MACvB,2DCZNC,IAASC,OAAOzH,EAAAC,EAAAC,cAACwH,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.e58ef5f5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WeatherPreview_wrapper__1Lwll\",\"day\":\"WeatherPreview_day__Ckl-8\",\"cloud1-1\":\"WeatherPreview_cloud1-1__1rzd4\",\"cloudMove1\":\"WeatherPreview_cloudMove1__2QTfb\",\"cloud2-1\":\"WeatherPreview_cloud2-1__dy-qB\",\"cloud1-2\":\"WeatherPreview_cloud1-2__yz1LU\",\"cloud2-2\":\"WeatherPreview_cloud2-2__1p8Ek\",\"cloud1-3\":\"WeatherPreview_cloud1-3__3sBte\",\"cloud2-3\":\"WeatherPreview_cloud2-3__23Nn6\",\"cloud1-4\":\"WeatherPreview_cloud1-4__20cNx\",\"cloud2-4\":\"WeatherPreview_cloud2-4__1a52M\",\"cloud1-5\":\"WeatherPreview_cloud1-5__1Gky3\",\"cloud2-5\":\"WeatherPreview_cloud2-5__3zBrI\",\"cloud1-6\":\"WeatherPreview_cloud1-6__2Q9L5\",\"cloud2-6\":\"WeatherPreview_cloud2-6__kOLzT\",\"cloud1-7\":\"WeatherPreview_cloud1-7__3OwwU\",\"cloud2-7\":\"WeatherPreview_cloud2-7__3eBKd\",\"cloud1-8\":\"WeatherPreview_cloud1-8__25gk3\",\"cloud2-8\":\"WeatherPreview_cloud2-8__2mDUT\",\"cloud1-9\":\"WeatherPreview_cloud1-9__3xf1G\",\"cloud2-9\":\"WeatherPreview_cloud2-9__3IT--\",\"cloud1-10\":\"WeatherPreview_cloud1-10__8MI9T\",\"cloud2-10\":\"WeatherPreview_cloud2-10__2m2y3\",\"rainSmall1\":\"WeatherPreview_rainSmall1__2G05y\",\"drop\":\"WeatherPreview_drop__33DVy\",\"snowing\":\"WeatherPreview_snowing__1INFq\",\"rainBig1\":\"WeatherPreview_rainBig1__1Ws23\",\"rainMed1\":\"WeatherPreview_rainMed1__3crjn\",\"rainSmall2\":\"WeatherPreview_rainSmall2__3g1vu\",\"rainBig2\":\"WeatherPreview_rainBig2__rkSfQ\",\"rainMed2\":\"WeatherPreview_rainMed2__2Dyis\",\"rainSmall3\":\"WeatherPreview_rainSmall3__21zde\",\"rainBig3\":\"WeatherPreview_rainBig3__36fFy\",\"rainMed3\":\"WeatherPreview_rainMed3__27STp\",\"rainSmall4\":\"WeatherPreview_rainSmall4__M5_1F\",\"rainBig4\":\"WeatherPreview_rainBig4__2pR9r\",\"rainMed4\":\"WeatherPreview_rainMed4__25zLN\",\"rainSmall5\":\"WeatherPreview_rainSmall5__Mtymg\",\"rainBig5\":\"WeatherPreview_rainBig5__2Vbpv\",\"rainMed5\":\"WeatherPreview_rainMed5__37Dku\",\"rainSmall6\":\"WeatherPreview_rainSmall6__1psOt\",\"rainBig6\":\"WeatherPreview_rainBig6__10r6N\",\"rainMed6\":\"WeatherPreview_rainMed6__3kxVi\",\"rainSmall7\":\"WeatherPreview_rainSmall7__2dGnk\",\"rainBig7\":\"WeatherPreview_rainBig7__2mFja\",\"rainMed7\":\"WeatherPreview_rainMed7__uqfAd\",\"rainSmall8\":\"WeatherPreview_rainSmall8__3GIvO\",\"rainBig8\":\"WeatherPreview_rainBig8__UUnNw\",\"rainMed8\":\"WeatherPreview_rainMed8__3lIUW\",\"rainSmall9\":\"WeatherPreview_rainSmall9__3gLZL\",\"rainBig9\":\"WeatherPreview_rainBig9__1sWpl\",\"rainMed9\":\"WeatherPreview_rainMed9__3-Sha\",\"rainSmall10\":\"WeatherPreview_rainSmall10__2FwKn\",\"rainBig10\":\"WeatherPreview_rainBig10__1NSF8\",\"rainMed10\":\"WeatherPreview_rainMed10__1aEFM\",\"rainSmall11\":\"WeatherPreview_rainSmall11__3raqH\",\"rainBig11\":\"WeatherPreview_rainBig11__1mRsp\",\"rainMed11\":\"WeatherPreview_rainMed11__3PqHE\",\"rainSmall12\":\"WeatherPreview_rainSmall12__3UfXY\",\"rainBig12\":\"WeatherPreview_rainBig12__IBS8r\",\"rainMed12\":\"WeatherPreview_rainMed12__36oPF\",\"sun\":\"WeatherPreview_sun__3ibmW\",\"rise\":\"WeatherPreview_rise__31x5V\",\"moon\":\"WeatherPreview_moon__8fCFS\",\"crater1\":\"WeatherPreview_crater1__2zA2N\",\"crater2\":\"WeatherPreview_crater2__1osa1\",\"crater3\":\"WeatherPreview_crater3__3Nhnz\",\"crater4\":\"WeatherPreview_crater4__1XU-5\",\"crater5\":\"WeatherPreview_crater5__2iojG\",\"crater6\":\"WeatherPreview_crater6__18ClZ\",\"crater7\":\"WeatherPreview_crater7__25CwM\",\"crater8\":\"WeatherPreview_crater8__3Kw2q\",\"crater9\":\"WeatherPreview_crater9__14hgU\",\"hillBg1\":\"WeatherPreview_hillBg1__dDci0\",\"hillBg2\":\"WeatherPreview_hillBg2__16RMb\",\"hillFg1\":\"WeatherPreview_hillFg1__39IDc\",\"hillFg2\":\"WeatherPreview_hillFg2__qhKaS\",\"hillFg3\":\"WeatherPreview_hillFg3__1MFQi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"WeatherInfo_wrapper__2rDcK\",\"temperature\":\"WeatherInfo_temperature__2gW4C\",\"weatherDetailsWrapper\":\"WeatherInfo_weatherDetailsWrapper__3monQ\",\"location\":\"WeatherInfo_location__Q2lPb\",\"day\":\"WeatherInfo_day__3UMOu\",\"weatherDetails\":\"WeatherInfo_weatherDetails__3xhMu\",\"weatherDays\":\"WeatherInfo_weatherDays__3OX-S\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"LocationInput_form__350mN\",\"input\":\"LocationInput_input__3mPTp\",\"submit\":\"LocationInput_submit__2IZ8A\"};","module.exports = __webpack_public_path__ + \"static/media/cloud1.0f496981.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud2.d620a9e5.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloud3.96c8ac28.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"root\":\"App_root__2CSG3\"};","import React from 'react'\nimport cloud1 from '../../assets/cloud1.svg'\nimport cloud2 from '../../assets/cloud2.svg'\nimport cloud3 from '../../assets/cloud3.svg'\n\nexport function Cloud1() {\n  return <img src={cloud1} alt=\"Cloud\" />\n}\n\nexport function Cloud2() {\n  return <img src={cloud2} alt=\"Cloud\" />\n}\n\nexport function Cloud3() {\n  return <img src={cloud3} alt=\"Cloud\" />\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Cloud1, Cloud2 } from './Clouds'\nimport styles from './WeatherPreview.module.scss'\n\n// TODO:\n// Split components and css into different files\n\nfunction Fall(props) {\n  const { isSnowing } = props\n\n  let rainSmall = []\n  let rainMed = []\n  let rainBig = []\n\n  for (let i = 1; i < 12; i++) {\n    rainSmall.push(\n      <div key={`rainSmall${i}`} className={`${styles[`rainSmall${i}`]}`} />\n    )\n    rainMed.push(\n      <div key={`rainMed${i}`} className={`${styles[`rainMed${i}`]}`} />\n    )\n    rainBig.push(\n      <div key={`rainBig${i}`} className={`${styles[`rainBig${i}`]}`} />\n    )\n  }\n\n  return (\n    <div\n      className={isSnowing ? styles.snowing : null}\n      style={{ overflow: 'hidden' }}\n    >\n      {rainSmall}\n      {rainMed}\n      {rainBig}\n    </div>\n  )\n}\n\nfunction Hills(props) {\n  return (\n    <div className={props.isDay ? styles.day : null}>\n      <div className={styles.hillBg1} />\n      <div className={styles.hillBg2} />\n      <div className={styles.hillFg1} />\n      <div className={styles.hillFg2} />\n      <div className={styles.hillFg3} />\n    </div>\n  )\n}\n\nfunction Sun() {\n  return (\n    <div>\n      <div className={styles.sun} />\n    </div>\n  )\n}\n\nfunction Moon() {\n  return (\n    <div>\n      <div className={styles.moon}>\n        <div className={styles.crater1} />\n        <div className={styles.crater2} />\n        <div className={styles.crater3} />\n        <div className={styles.crater4} />\n        <div className={styles.crater5} />\n        <div className={styles.crater6} />\n        <div className={styles.crater7} />\n        <div className={styles.crater8} />\n        <div className={styles.crater9} />\n      </div>\n    </div>\n  )\n}\n\nfunction Clouds(props) {\n  let clouds = []\n\n  for (let i = 1; i <= props.cloudCount; i++) {\n    clouds.push(\n      <div key={`cloud1-${i}`} className={`${styles[`cloud1-${i}`]}`}>\n        <Cloud1 />\n      </div>\n    )\n    clouds.push(\n      <div key={`cloud2-${i}`} className={`${styles[`cloud2-${i}`]}`}>\n        <Cloud2 />\n      </div>\n    )\n  }\n\n  return (\n    <div>\n      <div className={styles.clouds}>{clouds}</div>\n    </div>\n  )\n}\n\nexport default function WeatherPreview(props) {\n  const { cloudCount, isDay, isSnowing } = props\n  return (\n    <div\n      className={\n        isDay ? [styles.wrapper, styles.day].join(' ') : styles.wrapper\n      }\n    >\n      {isDay ? <Sun /> : <Moon />}\n      {props.isRaining ? <Fall isSnowing={isSnowing} /> : null}\n      <Hills isDay={isDay} />\n      {cloudCount && <Clouds cloudCount={cloudCount} />}\n    </div>\n  )\n}\n\n\nWeatherPreview.propTypes = {\n  cloudCount: PropTypes.number,\n  isDay: PropTypes.bool,\n  isSnowing: PropTypes.bool\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './WeatherInfo.module.scss'\n\n// Gets name of the day based on date\nfunction getDayName(dateStr, locale = 'gb-GB') {\n  var date = new Date(dateStr)\n  return date.toLocaleDateString(locale, { weekday: 'long' })\n}\n\nexport default function WeatherInfo(props) {\n  const { forecast, time } = props\n  const current = props.forecast[0] // Current day\n  let weekForecast = [] // Store other week days forecast\n  const howManyDays = 2 // How many days of it\n\n  for (let i = 1; i <= howManyDays; i++) {\n    weekForecast.push(\n      <span key={`weekDayForecast-${i}`}>\n        {getDayName(forecast[i].datetime)}: {forecast[i].max_temp}° /{' '}\n        {forecast[0].min_temp}°{' '}\n      </span>\n    )\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.temperature}>{current.temp}°</div>\n      <div className={styles.day}>\n        {time}, {getDayName(current.datetime)}\n      </div>\n      <div className={styles.location}>{props.location}</div>\n      <div className={styles.weatherDetailsWrapper}>\n        <div className={styles.weatherDetails}>\n          <span>\n            Wind: {current.wind_cdir} {Math.round(current.wind_spd)}km/h{' '}\n            <span role=\"img\" aria-label=\"Wind\">\n              💨\n            </span>\n          </span>\n          <span>\n            Humidity: {current.rh}%{' '}\n            <span role=\"img\" aria-label=\"Humidity\">\n              💧\n            </span>\n          </span>\n        </div>\n        <div className={styles.weatherDays}>{weekForecast}</div>\n      </div>\n    </div>\n  )\n}\n\n\nWeatherInfo.propTypes = {\n  forecast: PropTypes.array,\n  time: PropTypes.string\n}","import React from 'react'\nimport PropTypes from 'prop-types'\nimport styles from './LocationInput.module.scss'\n\nexport default function LocationInput(props) {\n  return (\n    <form className={styles.form} onSubmit={props.handleLocationChange}>\n      <label>\n        Location:\n        <input\n          className={styles.input}\n          type=\"text\"\n          name=\"location\"\n          defaultValue=\"Kings Langley, UK\"\n        />\n      </label>\n      <input className={styles.submit} type=\"submit\" value=\"GO\" />\n    </form>\n  )\n}\n\nLocationInput.propTypes = {\n  handleLocationChange: PropTypes.func.isRequired\n}\n","import React from 'react'\nimport WeatherPreview from './components/weather-preview/WeatherPreview'\nimport WeatherInfo from './components/weather-info/WeatherInfo'\nimport LocationInput from './components/location-input/LocationInput'\nimport styles from './App.module.scss'\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n\n    this.state = {\n      location: 'Kings Langley',\n      forecast: null,\n      isRaining: false,\n      isDay: true,\n      isSnowing: false,\n      cloudCount: 0,\n      time: undefined\n    }\n  }\n\n  handleLocationChange = async e => {\n    e.preventDefault()\n    const location = e.target[0].value\n    this.getCurrentWeather(location)\n  }\n\n  getCurrentWeather = async location => {\n    const KEY = '8c295ee8b00a45289d29e5130748efe5'\n    const API = `http://api.weatherbit.io/v2.0/forecast/daily?city=${location}&key=${KEY}`\n    const res = await fetch(API)\n    const data = await res.json()\n    const isRaining = data.data[0].pop > 60 ? true : false\n    const isDay = this.isDay(data.timezone)\n    const cloudCount = data.data[0].clouds / 10\n    const isSnowing = data.data[0].snow > 100 && isRaining // Check if there is snow and it is raining\n    const time = this.getCurrentTime(data.timezone)\n    this.setState({\n      location: location,\n      forecast: data.data,\n      isRaining: isRaining,\n      isDay: isDay,\n      cloudCount: cloudCount,\n      isSnowing: isSnowing,\n      time: time\n    })\n\n    return data // TODO Delete if not going to be use\n  }\n\n  async componentDidMount() {\n    this.getCurrentWeather(this.state.location)\n\n    // TODO\n    // Is cloudy?\n  }\n\n  // Find out if it is day or night based on timezone\n  isDay = timeZone => {\n    let options = {\n        timeZone: timeZone,\n        hour: 'numeric'\n      },\n      formatter = new Intl.DateTimeFormat([], options)\n\n    const hours = formatter.format(new Date())\n    return hours > 6 && hours < 18 ? true : false\n  }\n\n  //Gets current time based on timezone\n  getCurrentTime = timezone => {\n    let options = {\n        timeZone: timezone,\n        hour: 'numeric',\n        minute: 'numeric'\n      },\n      formatter = new Intl.DateTimeFormat([], options)\n\n    const time = formatter.format(new Date())\n    return time\n  }\n\n  render() {\n    const {\n      forecast,\n      isRaining,\n      isDay,\n      cloudCount,\n      location,\n      isSnowing,\n      time\n    } = this.state\n\n    return (\n      forecast && (\n        <div className={styles.root}>\n          <LocationInput handleLocationChange={this.handleLocationChange} />\n          <WeatherPreview\n            isRaining={isRaining}\n            isDay={isDay}\n            cloudCount={cloudCount}\n            isSnowing={isSnowing}\n          />\n          {forecast && (\n            <WeatherInfo forecast={forecast} location={location} time={time} />\n          )}\n        </div>\n      )\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}